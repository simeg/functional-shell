#!/usr/bin/env bash

set -e

function _filter {
  declare -a allowed_fns
  allowed_fns=(
    # arithmetic
    even
    odd

    # comparison
    eq
    equal
    ne
    not_eq
    not_equals
    ge
    greater_equals
    gt
    greater_than
    le
    less_equals
    lt
    less_than

    # file_and_dir
    is_dir
    is_link
    is_file
    is_executable
    exists
    has_ext

    # logical
    non_empty

    # string
    contains
    starts_with
    ends_with
  )

  local fn_arg="$1"
  shift
  local args="$*"

  if [[ ! "${allowed_fns[*]}" == *"${fn_arg}"* ]]; then
    printf "%s %s\n" "$fn_arg" "is not a valid function for filter" >&2
    exit 1
  fi

  # If empty input exit with 1
  if test -t 0; then
    exit 1
  fi

  # Change IFS to preserve whitespace in filenames
  local old_ifs=$IFS
  IFS=''

  local filter_res
  while read -r line; do
    # Use safer function call instead of eval
    if filter_res=$("$fn_arg" "$line" "$args"); then
      if [ "$filter_res" == "true" ]; then
        printf "%s\n" "$line"
      fi
    fi
  done < /dev/stdin

  IFS=$old_ifs
}

export -f _filter
