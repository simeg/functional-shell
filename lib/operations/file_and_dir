#!/usr/bin/env bash

set -e

function abspath {
  local input=$1
  realpath "$input"
}

function dirname {
  local input=$1
  local dirname_path="${input%/*}"
  echo "${dirname_path##*/}"
}

function basename {
  local input=$1
  echo "${input##*/}"
}

function is_dir {
  local input=$1
  if [ -d "$input" ]; then
    printf "%s\n" true
  else
    printf "%s\n" false
  fi
}

function is_file {
  local input=$1
  if [ -f "$input" ]; then
    printf "%s\n" true
  else
    printf "%s\n" false
  fi
}

function is_link {
  local input=$1
  if [ -L "$input" ]; then
    printf "%s\n" true
  else
    printf "%s\n" false
  fi
}

function is_executable {
  local input=$1
  if [[ -f "$input" && -x "$input" ]]; then
    printf "%s\n" true
  else
    printf "%s\n" false
  fi
}

function exists {
  local input=$1
  if [ -e "$input" ]; then
    printf "%s\n" true
  else
    printf "%s\n" false
  fi
}

function has_ext {
  local input=$1
  local expected_ext=$2
  local actual_ext=${input##*.}

  local file_exists
  file_exists=$(test -e "$input"; echo $?)
  if [ "$file_exists" -gt 0 ]; then
    printf "%s\n" false
  else
    local has_ext
    if test "$input" != "$actual_ext"; then
      has_ext=0
    else
      has_ext=1
    fi
    local has_same_ext
    has_same_ext=$(test "$actual_ext" == "$expected_ext"; echo $?)

    if [ "$has_same_ext" -eq 0 ]; then
      printf "%s\n" true
    else
      printf "%s\n" false
    fi
  fi
}

function strip_ext {
  local input=$1
  local file_without_ext=${input%.*}

  printf "%s\n" "$file_without_ext"
}

function replace_ext {
  local input=$1
  local new_ext=$2
  local file_without_ext=${input%.*}

  printf "%s\n" "$file_without_ext"."$new_ext"
}

function split_ext {
  local input=$1
  local file_without_ext=${input%.*}
  local ext="${input##*.}"

  local has_ext
  has_ext=$(test "$input" != "$ext"; echo $?)

  if [ "$has_ext" -eq 0 ]; then
    printf "%s\t%s\n" "$file_without_ext" "$ext"
  else
    printf "%s\n" "$input"
  fi
}

